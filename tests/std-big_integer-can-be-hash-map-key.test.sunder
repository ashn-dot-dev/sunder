import "std";

func main() void {
    var map = std::hash_map[[std::big_integer, []byte]]::init();
    defer map.fini();

    var result = std::big_integer::init_from_str("0", 0);
    map.insert(result.value(), "value 1");
    var result = std::big_integer::init_from_str("+0xBEEFBEEFBEEFBEEF", 0);
    map.insert(result.value(), "value 2");
    var result = std::big_integer::init_from_str("-0xBEEFBEEFBEEFBEEF", 0);
    map.insert(result.value(), "value 3");
    var result = std::big_integer::init_from_str("-0xBEEFBEEFBEEFBEEF", 0);
    map.insert(result.value(), "value 4");
    var result = std::big_integer::init_from_str("0xFFFFFFFFFFFFFFFF", 0);
    map.insert(result.value(), "value 5");

    var iter = map.iterator();
    for iter.advance() {
        std::print_format_line(
            std::out(),
            "{+#X}: \"{e}\"",
            (:[]std::formatter)[
                std::formatter::init[[std::big_integer]](iter.current().*.key),
                std::formatter::init[[[]byte]](iter.current().*.value)]);
    }
}
################################################################################
# +0x0: "value 1"
# +0xBEEFBEEFBEEFBEEF: "value 2"
# -0xBEEFBEEFBEEFBEEF: "value 4"
# +0xFFFFFFFFFFFFFFFF: "value 5"
